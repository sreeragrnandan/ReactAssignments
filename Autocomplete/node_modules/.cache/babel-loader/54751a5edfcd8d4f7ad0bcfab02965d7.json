{"ast":null,"code":"import _ from \"lodash\";\nimport jsonPlaceholder from \"../apis/jsonPlaceholder\";\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  _.chain(getState().posts).map(\"userId\").uniq().forEach(id => dispatch(fetchUser(id))).value();\n};\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get(\"/posts\");\n  dispatch({\n    type: \"FETCH_POSTS\",\n    payload: response.data\n  });\n};\nexport const fetchUser = id => async dispatch => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n  dispatch({\n    type: \"FETCH_USER\",\n    payload: response.data\n  });\n}; // export const fetchUser = id => dispatch => _fetchUser(id, dispatch);\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n//   const response = await jsonPlaceholder.get(`/users/${id}`);\n//   dispatch({ type: 'FETCH_USER', payload: response.data });\n// });","map":{"version":3,"sources":["C:/Users/Sreerag/Desktop/Converj/React/blog/src/actions/index.js"],"names":["_","jsonPlaceholder","fetchPostsAndUsers","dispatch","getState","fetchPosts","chain","posts","map","uniq","forEach","id","fetchUser","value","response","get","type","payload","data"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACpE,QAAMD,QAAQ,CAACE,UAAU,EAAX,CAAd;;AAEAL,EAAAA,CAAC,CAACM,KAAF,CAAQF,QAAQ,GAAGG,KAAnB,EACGC,GADH,CACO,QADP,EAEGC,IAFH,GAGGC,OAHH,CAGYC,EAAD,IAAQR,QAAQ,CAACS,SAAS,CAACD,EAAD,CAAV,CAH3B,EAIGE,KAJH;AAKD,CARM;AAUP,OAAO,MAAMR,UAAU,GAAG,MAAM,MAAOF,QAAP,IAAoB;AAClD,QAAMW,QAAQ,GAAG,MAAMb,eAAe,CAACc,GAAhB,CAAoB,QAApB,CAAvB;AAEAZ,EAAAA,QAAQ,CAAC;AAAEa,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMN,SAAS,GAAID,EAAD,IAAQ,MAAOR,QAAP,IAAoB;AACnD,QAAMW,QAAQ,GAAG,MAAMb,eAAe,CAACc,GAAhB,CAAqB,UAASJ,EAAG,EAAjC,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAEa,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACD,CAJM,C,CAMP;AACA;AACA;AAEA;AACA","sourcesContent":["import _ from \"lodash\";\r\nimport jsonPlaceholder from \"../apis/jsonPlaceholder\";\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n  await dispatch(fetchPosts());\r\n\r\n  _.chain(getState().posts)\r\n    .map(\"userId\")\r\n    .uniq()\r\n    .forEach((id) => dispatch(fetchUser(id)))\r\n    .value();\r\n};\r\n\r\nexport const fetchPosts = () => async (dispatch) => {\r\n  const response = await jsonPlaceholder.get(\"/posts\");\r\n\r\n  dispatch({ type: \"FETCH_POSTS\", payload: response.data });\r\n};\r\n\r\nexport const fetchUser = (id) => async (dispatch) => {\r\n  const response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n  dispatch({ type: \"FETCH_USER\", payload: response.data });\r\n};\r\n\r\n// export const fetchUser = id => dispatch => _fetchUser(id, dispatch);\r\n// const _fetchUser = _.memoize(async (id, dispatch) => {\r\n//   const response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n//   dispatch({ type: 'FETCH_USER', payload: response.data });\r\n// });\r\n"]},"metadata":{},"sourceType":"module"}