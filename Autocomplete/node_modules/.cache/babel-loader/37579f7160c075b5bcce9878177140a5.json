{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sreerag\\\\Desktop\\\\Converj\\\\React\\\\blog\\\\src\\\\components\\\\UserHeader.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserHeader extends React.Component {\n  componentDidMount() {\n    this.props.fetchUsers(this.props.userId);\n  }\n\n  render() {\n    const user = this.props.user.find(user => user.id === this.props.userId);\n\n    if (!user) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default connect(null, {\n  fetchUsers\n})(UserHeader);","map":{"version":3,"sources":["C:/Users/Sreerag/Desktop/Converj/React/blog/src/components/UserHeader.js"],"names":["React","connect","fetchUsers","UserHeader","Component","componentDidMount","props","userId","render","user","find","id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,UAAX,CAAsB,KAAKI,KAAL,CAAWC,MAAjC;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAX,CAAgBC,IAAhB,CAAsBD,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAY,KAAKL,KAAL,CAAWC,MAAtD,CAAb;;AACA,QAAI,CAACE,IAAL,EAAW;AACT,aAAO,IAAP;AACD;;AACD,wBAAO;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBA,IAAI,CAACG;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAVsC;;AAazC,eAAeX,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAA8BC,UAA9B,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUsers } from \"../actions\";\r\n\r\nclass UserHeader extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchUsers(this.props.userId);\r\n  }\r\n  render() {\r\n    const user = this.props.user.find((user) => user.id === this.props.userId);\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    return <div className=\"header\">{user.name}</div>;\r\n  }\r\n}\r\n\r\nexport default connect(null, { fetchUsers })(UserHeader);\r\n"]},"metadata":{},"sourceType":"module"}